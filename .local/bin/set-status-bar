#!/bin/sh

fsmon() {
	ROOTPART=$(df -h | awk '/\/$/ { print $4 }') 
	echo " $ROOTPART"
}

ram() {
	mem=$(free -h | awk '/Mem:/ { print $3 }' | cut -f1 -d 'i')
	echo " $mem"
}

cpu() {
	read -r cpu a b c previdle rest < /proc/stat
	prevtotal=$((a+b+c+previdle))
	sleep 0.01
	read -r cpu a b c idle rest < /proc/stat
	total=$((a+b+c+idle))
	cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
	echo " $cpu%"
}

network() {
	route=$(ip route | awk '/default/' | head -n 1)
	if [ -z "$route" ]; then
		echo "󱘖 down"
  else
    interface=$(echo "$route" | cut -d ' ' -f 5)
    conntype=$(echo "$interface" | awk '{ print substr($1,1,1) }')
    ip=$(echo "$route" | cut -d ' ' -f 9)
    if [ "$conntype" = "e" ]; then
      echo "󰈀 up via $interface ($ip)"
    else
      echo "󰖩 up ($ip)"
    fi
	fi
}

volume_pa() {
	muted=$(pactl list sinks | awk '/Mute:/ { print $2 }')
	vol=$(pactl list sinks | grep Volume: | awk 'FNR == 1 { print $5 }' | cut -f1 -d '%')

	if [ "$muted" = "yes" ]; then
		echo " muted"
	else
		if [ "$vol" -ge 65 ]; then
			echo " $vol%"
		elif [ "$vol" -ge 40 ]; then
			echo " $vol%"
		elif [ "$vol" -ge 0 ]; then
			echo " $vol%"	
		fi
	fi

}

volume_alsa() {

	mono=$(amixer -M sget Master | grep Mono: | awk '{ print $2 }')

	if [ -z "$mono" ]; then
		muted=$(amixer -M sget Master | awk 'FNR == 6 { print $7 }' | sed 's/[][]//g')
		vol=$(amixer -M sget Master | awk 'FNR == 6 { print $5 }' | sed 's/[][]//g; s/%//g')
	else
		muted=$(amixer -M sget Master | awk 'FNR == 5 { print $6 }' | sed 's/[][]//g')
		vol=$(amixer -M sget Master | awk 'FNR == 5 { print $4 }' | sed 's/[][]//g; s/%//g')
	fi

	if [ "$muted" = "off" ]; then
		echo " muted"
	else
		if [ "$vol" -ge 65 ]; then
			echo " $vol%"
		elif [ "$vol" -ge 40 ]; then
			echo " $vol%"
		elif [ "$vol" -ge 0 ]; then
			echo " $vol%"	
		fi
	fi
}

clock() {
	date=$(date +"%D")
	time=$(date +"%H:%M")

	echo " $date  $time"
}

battery() {
	bat="$(ls /sys/class/power_supply | grep BAT)"
	if [ "$bat" ]; then
		capacity="$(cat "/sys/class/power_supply/$bat/capacity")"
		status="$(cat "/sys/class/power_supply/$bat/status")"

		if [ $capacity -lt 10 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰢜; else echo 󰁺; fi)
		elif [ $capacity -lt 20 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰂆; else echo 󰁻; fi)
		elif [ $capacity -lt 30 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰂇; else echo 󰁼; fi)
		elif [ $capacity -lt 40 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰂈; else echo 󰁽; fi)
		elif [ $capacity -lt 50 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰢝; else echo 󰁾; fi)
		elif [ $capacity -lt 60 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰂉; else echo 󰁿; fi)
		elif [ $capacity -lt 70 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰢞; else echo 󰂀; fi)
		elif [ $capacity -lt 80 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰂊; else echo 󰂁; fi)
		elif [ $capacity -lt 90 ]; then
			icon=$(if [ $status = "Charging" ]; then echo 󰂋; else echo 󰂂; fi)
		else
			icon=$(if [ $status = "Charging" ]; then echo 󰂅; else echo 󰁹; fi)
		fi

		echo "$icon $capacity%"

	else
		echo "󱉝 No battery"
	fi
}

xsetroot -name "| $(battery) | $(fsmon) | $(ram) | $(cpu) | $(network) | $(volume_alsa) | $(clock)"
